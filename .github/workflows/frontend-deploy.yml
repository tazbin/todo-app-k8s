name: Frontend CI/CD with SHA Tag

on:
  push:
    branches: [master]
    paths:
      - 'frontend/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set commit SHA as image tag
      id: vars
      run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Check & prepare k8s directory on EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          if [ -d "/home/ec2-user/k8s" ]; then
            echo "✅ /home/ec2-user/k8s already exists. Skipping copy."
            exit 0
          else
            echo "⏳ Directory doesn't exist. Creating placeholder..."
            mkdir -p /home/ec2-user/k8s
            exit 1
          fi

    - name: Copy K8s manifests to EC2 (only if missing)
      if: failure()  # runs only if previous step exited with non-zero
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "k8s/"
        target: "/home/ec2-user"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Build and Push Frontend Docker image
      run: |
        docker build \
          --build-arg API_BASE_URL=${{ secrets.EC2_HOST }} \
          --build-arg API_PORT=${{ secrets.BACKEND_API_PORT }} \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/todo-frontend:${{ env.TAG }} ./frontend
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/todo-frontend:${{ env.TAG }}

    - name: SSH into EC2 and apply manifests
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd ~/k8s
          if ! kubectl get deployment frontend-app -n default > /dev/null 2>&1; then
            echo "frontend-app deployment not found, applying manifests..."
            kubectl apply -f frontend-app.yaml
          else
            echo "frontend-app deployment already exists"
          fi
          kubectl set image deployment/frontend-app frontend-app-container=${{ secrets.DOCKERHUB_USERNAME }}/todo-frontend:${{ env.TAG }} -n default
          kubectl rollout status deployment/frontend-app -n default
